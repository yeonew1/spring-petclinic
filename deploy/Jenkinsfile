pipeline {
  agent any
  tools {
    maven "M3"
    jdk "JDK11"
  }
  
  stages {
    stage('Git fetch') {
      steps {
        echo 'Git fetch'
        git url: 'https://github.com/yeonew1/spring-petclinic.git/',
          branch: 'main', credentialsId: 'gitCredential'
      }
    }
  stage('Maven Build') {
    steps {
      echo 'Maven Build'
      sh 'mvn -Dmaven.test.failure.ignore=true clean package'
      }
    }
    stage('target Workload') {
      steps {
        echo 'Target Workload'
        sshPublisher(publishers: [sshPublisherDesc(configName: 'target', 
        transfers: [sshTransfer(cleanRemote: false, excludes: '', 
        execCommand: '''
        fuser -k 8080/tcp
        export BUILD_ID=PetClinic
        nohup java -jar /home/ubuntu/deploy/spring-petclinic-2.7.3.jar >> nohup.out 2>&1 &''', 
        execTimeout: 120000, 
        flatten: false, 
        makeEmptyDirs: false, 
        noDefaultExcludes: false,
        patternSeparator: '[, ]+', 
        remoteDirectory: 'deploy', 
        remoteDirectorySDF: false, 
        removePrefix: 'target', sourceFiles: 'target/*.jar')], 
        usePromotionTimestamp: false, 
        useWorkspaceInPromotion: false, 
        verbose: false)])
      }
    }
  stage('Docker Image') {
    steps {
      echo 'Docker Image'
      }
    }
  stage('Image Push') {
    steps {
      echo 'Image Push'
      }
    }
  stage('Codedeploy Workload') {
    steps {
      echo 'Codedeploy Workload'
      }
    }
  }
}
